// Generated by CoffeeScript 1.6.3
(function() {
  var FeedManager;

  FeedManager = (function() {
    function FeedManager() {
      this.current_feed = 0;
      this.filter_read = true;
      this.last_article = Infinity;
      this.last_article_visible = false;
      this.more_articles_to_load = true;
      this.busy = false;
      this.get_current_feed();
      this.set_current_feed();
      this.buttons = {};
      this.bind(true, true);
    }

    FeedManager.prototype.update_last_article = function(data) {
      var article, time, _i, _len;
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        article = data[_i];
        time = new Date(article.article.date_published);
        time = time.getTime();
        if (time < this.last_article) {
          this.last_article = time;
        }
      }
      return this.last_article;
    };

    FeedManager.prototype.reset_last_article = function() {
      return this.last_article = Infinity;
    };

    FeedManager.prototype.update_title = function() {
      var el, feed, unread;
      feed = this.get_current_feed();
      el = $("#feed-" + feed);
      unread = el.children('small').text();
      return document.title = "" + unread + " " + (el.data('name'));
    };

    FeedManager.prototype.get_current_feed = function() {
      var hash;
      hash = Number(window.location.hash.slice(1));
      if (hash !== this.current_feed) {
        this.current_feed = hash;
        this.change_feed(this.current_feed);
      }
      return hash;
    };

    FeedManager.prototype.set_current_feed = function() {
      $(".feed-row.active").removeClass('active');
      $("#feed-" + this.current_feed).addClass('active');
      window.location.hash = this.current_feed;
      return this.update_title();
    };

    FeedManager.prototype.change_feed = function(feed, keep_active_article) {
      var ih, offset, scroll, tmp,
        _this = this;
      if (keep_active_article == null) {
        keep_active_article = false;
      }
      this.busy = true;
      offset = $("#feed-" + feed).offset().top - 25;
      ih = $('.feed-list>ul').innerHeight() - 25;
      scroll = $('.feed-list>ul').scrollTop();
      if (offset + 14 > ih) {
        $('.feed-list>ul').scrollTop(scroll + (offset - ih) + 14);
      } else if (offset < 0) {
        $('.feed-list>ul').scrollTop(scroll + offset);
      }
      if (keep_active_article) {
        tmp = $('li.article-row.active').clone();
      }
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/feeds/" + feed + "/articles",
        data: !this.filter_read ? 'all' : void 0,
        dataType: 'json',
        success: function(data) {
          _this.reset_last_article();
          _this.update_last_article(data);
          _this.current_feed = feed;
          _this.set_current_feed();
          $('.article-list>ul').html(Mark.up(window.templates['articles'], {
            'articles': data
          }));
          if (keep_active_article) {
            $('div.article-list>ul').prepend(tmp);
          }
          _this.bind();
          $('.article-list').scrollTop(0);
          if (data.length === 50) {
            _this.more_articles_to_load = true;
          }
          return _this.busy = false;
        }
      });
    };

    FeedManager.prototype.load_more_articles = function() {
      var feed,
        _this = this;
      this.busy = true;
      feed = this.current_feed;
      if (!this.more_articles_to_load) {
        return;
      }
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/feeds/" + feed + "/articles",
        data: {
          'limit': 15,
          'all': !this.filter_read,
          'last_article': this.last_article
        },
        dataType: 'json',
        success: function(data) {
          _this.update_last_article(data);
          $('.article-list>ul').append(Mark.up(window.templates['articles'], {
            'articles': data
          }));
          _this.bind();
          if (data.length < 15) {
            console.log('no more');
            _this.more_articles_to_load = false;
          }
          return _this.busy = false;
        }
      });
    };

    FeedManager.prototype.update_unread = function(data) {
      var feed, _i, _len;
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        feed = data[_i];
        $("#feed-" + feed.feed + ">small").text("(" + feed.count + ")");
      }
      return this.update_title();
    };

    FeedManager.prototype.mark_read = function(article) {
      var _this = this;
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/article/" + article + "/read",
        dataType: 'json',
        success: function(data) {
          $("#article-" + article).addClass('read');
          $("#article-" + article + ">div.article-content>div.article-content-footer>div>span:last").text('Mark unread');
          return _this.update_unread(data);
        }
      });
    };

    FeedManager.prototype.mark_unread = function(article) {
      var _this = this;
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/article/" + article + "/unread",
        dataType: 'json',
        success: function(data) {
          $("#article-" + article).removeClass('read');
          $("#article-" + article + ">div.article-content>div.article-content-footer>div>span:last").text('Mark read');
          return _this.update_unread(data);
        }
      });
    };

    FeedManager.prototype.mark_all_read = function() {
      var feed,
        _this = this;
      feed = this.get_current_feed();
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/feeds/" + feed + "/mark_read",
        dataType: 'json',
        success: function(data) {
          $('.article-row').addClass('read');
          if (feed === 0) {
            $('.feed-row>small').text('(0)');
          } else {
            $("#feed-" + feed + ">small").text('(0)');
          }
          $('li.article-row>div.article-content>div.article-content-footer>div>span:last').text('Mark unread');
          return _this.update_unread(data);
        }
      });
    };

    FeedManager.prototype.refresh_feed = function() {
      var feed,
        _this = this;
      feed = this.get_current_feed();
      $('#refresh-feed').addClass('disabled');
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/feeds/" + feed + "/refresh",
        dataType: 'json',
        success: function(data) {
          _this.update_unread(data);
          _this.change_feed(feed, true);
          return $('#refresh-feed').removeClass('disabled');
        }
      });
    };

    FeedManager.prototype.refresh_feed_list = function(cb) {
      var _this = this;
      if (cb == null) {
        cb = null;
      }
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/feeds/list/",
        dataType: 'json',
        success: function(data) {
          $('.feed-list>ul').html(Mark.up(window.templates.feed_list, data));
          _this.bind(true);
          if (cb != null) {
            return cb();
          }
        }
      });
    };

    FeedManager.prototype.toggle_filter_read = function() {
      this.filter_read = this.filter_read ^ 1;
      $('#filter-read').button('toggle');
      return this.change_feed(this.get_current_feed());
    };

    FeedManager.prototype.toggle_article = function(title, e) {
      var child, main_content, row,
        _this = this;
      if (e == null) {
        e = null;
      }
      row = title.parent();
      child = row.children('.article-content');
      main_content = child.children('.article-content-main');
      if (row.hasClass('active')) {
        child.css('display', 'none');
        row.removeClass('active');
      } else {
        $('li.article-row.active').each(function() {
          return $(this).removeClass('active').children('.article-content').css('display', 'none');
        });
        child.css('display', 'inline-block');
        row.addClass('active');
        if (!main_content.data('loaded')) {
          $.ajax({
            url: "" + window.AJAX_BASE + "feeds/article/" + (row.data('id')) + "/",
            dataType: 'json',
            success: function(data) {
              main_content.html(data.article__content);
              return main_content.data('loaded', true);
            }
          });
        }
        if (!row.hasClass('read')) {
          this.mark_read(row.data('id'));
        }
      }
      if (e != null) {
        e.stopPropagation();
        return e.preventDefault();
      }
    };

    FeedManager.prototype.next_article = function() {
      var current_article, next;
      current_article = $('.article-row.active');
      if (current_article.length === 0) {
        next = $('.article-row:first').children('.article-row-title');
      } else {
        next = current_article.next().children('.article-row-title');
      }
      if (next.length === 0) {
        return this.toggle_article(current_article.children('.article-row-title'));
      } else {
        return this.toggle_article(next);
      }
    };

    FeedManager.prototype.prev_article = function() {
      var current_article, prev;
      current_article = $('.article-row.active');
      if (current_article.length === 0) {
        return null;
      } else {
        prev = current_article.prev().children('.article-row-title');
      }
      if (prev.length === 0) {
        return this.toggle_article(current_article.children('.article-row-title'));
      } else {
        return this.toggle_article(prev);
      }
    };

    FeedManager.prototype.add_feed = function() {
      var _this = this;
      if (!$('#add_feed_modal').length) {
        $('body').append(Mark.up(window.templates.modal));
        $('#add_feed_modal .modal-body').html(Mark.up(window.templates.add_feed_form));
        $('#add_feed_submit').click(function(e) {
          $('#add_feed_submit').addClass('disabled');
          return _this.add_feed_submit();
        });
      }
      return $('#add_feed_modal').modal();
    };

    FeedManager.prototype.add_feed_submit = function() {
      var _this = this;
      return $.ajax({
        url: "" + window.AJAX_BASE + "feeds/feeds/add/",
        type: 'POST',
        dataType: 'json',
        data: $('#id_url').serialize(),
        headers: {
          'X-CSRFToken': window.CSRF_TOKEN
        },
        success: function(data) {
          if ('error' in data) {
            $('#add_feed_modal .modal-body>.alert').text(data.error);
            return $('#add_feed_modal .modal-body>.alert').removeClass('hidden');
          } else {
            return _this.refresh_feed_list(function() {
              $('#add_feed_modal').on('hidden.bs.modal', function(e) {
                return $('#add_feed_modal').remove();
              });
              $('#add_feed_modal').modal('hide');
              return _this.change_feed(data.pk);
            });
          }
        }
      });
    };

    FeedManager.prototype.bind = function(feeds, initial) {
      var _this;
      if (feeds == null) {
        feeds = false;
      }
      if (initial == null) {
        initial = false;
      }
      _this = this;
      $('li.article-row>div.article-row-title').off('click');
      $('li.article-row>div.article-row-title').click(function(e) {
        return _this.toggle_article($(this), e);
      });
      $('li.article-row>div.article-content>div.article-content-footer>div').off('click');
      $('li.article-row>div.article-content>div.article-content-footer>div').click(function(e) {
        var id, row;
        row = $(this).parents('li');
        id = row.data('id');
        if (row.hasClass('read')) {
          return _this.mark_unread(id);
        } else {
          return _this.mark_read(id);
        }
      });
      if (feeds) {
        $('li.feed-row').off('click');
        $('li.feed-row').click(function(e) {
          var id, row;
          row = $(this);
          id = row.data('id');
          return _this.change_feed(id);
        });
      }
      if (initial) {
        this.buttons.mark_all_read = $('#mark-all-read');
        this.buttons.mark_all_read.click(function(e) {
          return _this.mark_all_read();
        });
        this.buttons.add_feed = $('#add-feed');
        this.buttons.add_feed.click(function(e) {
          return _this.add_feed();
        });
        this.buttons.refresh_feed = $('#refresh-feed');
        this.buttons.refresh_feed.click(function(e) {
          return _this.refresh_feed();
        });
        this.buttons.filter_read = $('#filter-read');
        this.buttons.filter_read.click(function(e) {
          return _this.toggle_filter_read();
        });
        $('body').keyup(function(e) {
          e.stopPropagation();
          e.preventDefault();
          if (e.which === 74) {
            return _this.next_article();
          } else if (e.which === 75) {
            return _this.prev_article();
          }
        });
        this.change_feed(this.get_current_feed());
        return $('.article-list').scroll(function() {
          if ($('.article-list').scrollTop() === 0 || _this.busy) {
            return;
          }
          if ($('.article-row:last').offset().top < $('.article-list').innerHeight()) {
            if (_this.last_article_visible === false) {
              _this.load_more_articles();
              return _this.last_article_visible = true;
            }
          } else {
            return _this.last_article_visible = false;
          }
        });
      }
    };

    return FeedManager;

  })();

  window.templates = {
    'feed_list': "		<li class='feed-row' id='feed-0' data-id='0' data-name='All Items'>			Unread Items <small>({{total_unread_count}})</small>		</li>		{{feed_list}}		<li class='feed-row{{if not success}} error{{/if}}' id='feed-{{pk}}' data-id='{{pk}}' data-name='{{title}}'{{if not success}} title='{{last_error}}'{{/if}}>			<span>{{title}}</span> <small>({{unread}})</small>		</li>		{{/feed_list}}",
    'articles': "{{articles}}	<li class='article-row{{if read}} read{{/if}}' id='article-{{article.pk}}'	data-id='{{article.pk}}'>		<div class='article-row-title'>			<img class='feed-icon' src='{{feed.image}}'>			<div class='article-feed-name'>{{feed.title}}</div>			<div class='article-title'>{{article.title}}</div>			<div class='article-date' title='Published: {{article.date_published}} Discovered: {{article.date_added}}'>{{article.date_published_relative}}</div>		</div>		<div class='article-content panel panel-default'>			<div class='article-content-title panel-heading'>				<h2><a href='{{article.url}}' target='_blank'>{{article.title}}</a></h2>			</div>			<div class='article-content-main panel-body' data-loaded='false'>							</div>			<div class='article-content-footer panel-footer'>				<div><span class='glyphicon glyphicon-envelope'></span> <span>{{if read}}Mark unread{{else}}Mark read{{/if}}</span></div>			</div>		</div>	</li>	{{/articles}}",
    'modal': "		<div class='modal fade' id='add_feed_modal' tabindex='-1' role='dialog'>			<div class='modal-dialog'>				<div class='modal-content'>					<div class='modal-header'>						<button type='button' class='close' data-dismiss='modal'>&times;</button>						<h4 class='modal-title' id='add_feed_modal_label'>Add feed</h4>					</div>					<div class='modal-body'></div>					<div class='modal-footer'>						<button type='button' class='btn btn-default' data-dismiss='modal'>Close</button>						<button type='button' class='btn btn-primary' id='add_feed_submit'>Add feed</button>					</div>				</div>			</div>		</div>",
    'add_feed_form': "		<div class='alert alert-danger hidden'></div>		<form class='form-horizontal' role='form'>			<div class='form-group'>				<label class='col-md-2 control-label' for='id_url'>Feed URL</label>				<div class='col-md-12'>					<input class='form-control' id='id_url' name='url' type='url'>				</div>			</div>		</form>"
  };

  $(document).ready(function() {
    return window.feeds = new FeedManager();
  });

}).call(this);
